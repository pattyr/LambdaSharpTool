{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "LambdaSharp CloudFormation Test",
  "Resources": {
    "Topic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {}
    },
    "RollbarToken": {
      "Type": "Custom::LambdaSharpRollbarProject",
      "Properties": {
        "ServiceToken": "arn:aws:sns:us-east-1:123456789012:LambdaSharpRollbar-RollbarCustomResourceTopic",
        "Project": "TestDeployment",
        "DevEnv": "Test"
      }
    },
    "AppRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Subscribe"
                  ],
                  "Resource": {
                    "Ref": "Topic"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:SendMessage"
                  ],
                  "Resource": "arn:aws:sqs:us-east-1:123456789012:LambdaSharp-DeadLetterQueue"
                }
              ]
            },
            "PolicyName": "Test-TestDeployment-policy"
          }
        ]
      }
    },
    "Function": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "lambdsharp-bucket-name",
          "S3Key": "TestDeployment/TestDeployment.Function-NOCOMPILE.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": "arn:aws:sqs:us-east-1:123456789012:LambdaSharp-DeadLetterQueue"
        },
        "Environment": {
          "Variables": {
            "DEVENV": "Test",
            "APPNAME": "TestDeployment",
            "STACKNAME": "Test-TestDeployment",
            "DEADLETTERQUEUE": "https://sqs.us-east-1.amazonaws.com/123456789012/LambdaSharp-DeadLetterQueue",
            "LAMBDARUNTIME": "dotnetcore2.1",
            "STACK_TOPIC": {
              "Ref": "Topic"
            },
            "STACK_ROLLBARTOKEN": {
              "Fn::GetAtt": [
                "RollbarToken",
                "Result"
              ]
            }
          }
        },
        "FunctionName": "Test-TestDeployment-Function",
        "Handler": "TestDeployment.Function::MindTouch.LambdaSharpTestDeployment.Function.Function::FunctionHandlerAsync",
        "MemorySize": "128",
        "Role": {
          "Fn::GetAtt": [
            "AppRole",
            "Arn"
          ]
        },
        "Runtime": "dotnetcore2.1",
        "Tags": [
          {
            "Key": "lambdasharp:devenv",
            "Value": "Test"
          },
          {
            "Key": "lambdasharp:deployment",
            "Value": "TestDeployment"
          }
        ],
        "Timeout": "30"
      }
    },
    "FunctionTopicSnsPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Function",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "Topic"
        }
      }
    },
    "FunctionTopicSubscription": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "Function",
            "Arn"
          ]
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "Topic"
        }
      }
    }
  }
}